name: Anchore Enterprise Distributed Scan

on:
  workflow_dispatch:
    inputs:
      mode:
        description: 'On-Demand Build'

env:
  ANCHORECTL_URL: ${{ vars.ANCHORECTL_URL }} # This needs to be the actual URL of your Anchore Enterprise
  ANCHORECTL_USERNAME: ${{ vars.ANCHORECTL_USERNAME }}
  ANCHORECTL_PASSWORD: ${{ secrets.ANCHORECTL_PASSWORD }}
  ANCHORECTL_FAIL_BASED_ON_RESULTS: false
  REGISTRY: ghcr.io

# Add permissions at the workflow level to allow writing to packages
permissions:
  contents: read # Default, good practice to explicitly state
  packages: write # Critical: Add write permission for packages

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }} # This base is used by metadata-action to derive tags
          tags: |
            type=ref,event=branch # Generates tags like :main, :feature-branch
            type=sha,format=long  # Generates tags like :sha-abcdef1234567890

      # --- Debugging Step (Keep this to confirm file paths in logs) ---
      - name: Debug - List Files in Dockerfile Directory
        run: |
          echo "Listing files in the root of the workspace (${{ github.workspace }}):"
          ls -alF ${{ github.workspace }}
          echo ""
          echo "Expected Dockerfile path relative to context: Dockerfile"
      # --- End Debugging Step ---

      - name: Build and Push Container Image
        uses: docker/build-push-action@v6
        with:
          # Context is now the repository root
          context: ${{ github.workspace }}
          # File is now just the Dockerfile's name (relative to the root context)
          file: Dockerfile
          tags: ${{ steps.meta.outputs.tags }} # Use the tags generated by metadata-action (correctly lowercased)
          labels: ${{ steps.meta.outputs.labels }}
          push: true

  Anchore:
    runs-on: ubuntu-latest
    needs: Build
    steps:
      - name: "Set IMAGE environmental variables for Anchore"
        run: |
          # Reconstruct the IMAGE variable for Anchore, ensuring the repository part is lowercase.
          REPO_SLUG_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=${{ env.REGISTRY }}/${REPO_SLUG_LOWERCASE}:${{ github.ref_name }}" >> $GITHUB_ENV
          echo "Debug: Anchore IMAGE set to ${{ env.IMAGE }}"

      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Install anchorectl from Anchore Enterprise
        run: |
          # Download and extract anchorectl binary directly from the Enterprise instance.
          # The URL is constructed using the ANCHORECTL_URL environment variable.
          # 'tar -zx anchorectl' extracts the 'anchorectl' file from the gzipped tarball.
          curl -sSfL -X GET "${{ env.ANCHORECTL_URL }}v2/system/anchorectl?operating_system=linux&architecture=amd64" \
          -H "accept: */*" \
          | tar -zx anchorectl

          # Make the extracted binary executable
          chmod +x anchorectl

          # Move the binary to a directory that is typically in the PATH (e.g., /usr/local/bin)
          # This ensures that subsequent 'anchorectl' commands can be found without explicitly
          # specifying their path (e.g., ./anchorectl).
          sudo mv anchorectl /usr/local/bin/anchorectl

          # Verify the installation by checking its location and version
          echo "Verifying anchorectl installation:"
          which anchorectl
          anchorectl --version

      - name: Verify AnchoreCTL connection and environment
        run: |
          echo "Attempting to connect to AnchoreCTL at: ${{ env.ANCHORECTL_URL }}"
          ANCHORECTL_URL="https://anchore.nizati.com/" ANCHORECTL_USERNAME="admin" ANCHORECTL_PASSWORD="Wu5P5StVsT1uErnKsGqtpCdIVTzGUXdi" anchorectl system status
          anchorectl system status # Verify connection to Anchore Enterprise

      - name: Generate SBOM and Push to Anchore
        run: |
          # Specify the Dockerfile path relative to the workspace root for anchorectl
          anchorectl image add --no-auto-subscribe --wait --from registry --dockerfile Dockerfile ${IMAGE}

      - name: Pull Vulnerability List
        run: |
          anchorectl image vulnerabilities ${IMAGE}

      - name: Pull Policy Evaluation
        run: |
          anchorectl image check --detail ${IMAGE}
